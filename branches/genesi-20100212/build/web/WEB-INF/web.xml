<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>VVS Spring Security Application</display-name>

    <!--
	  - Location of the XML file that defines the root application context
	  - Applied by ContextLoaderListener.
	  -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
			/WEB-INF/applicationContext.xml
        </param-value>
    </context-param>

	<!-- To enable the Spring Security framework, you have to set up a filter-mapping -->
	<!-- which delegates all calls to a Spring bean defined in the application context -->
    <!-- You won't actually see a bean with this name declared in the application context file, as we are using the more concise namespace-based configuration approach which was introduced in Spring 2.0.  -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>



	<!--
	  - Loads the root application context of this web app at startup.
	  - The application context is then available via
	  - WebApplicationContextUtils.getWebApplicationContext(servletContext).
    -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

	<!--
	  - Publishes events for session creation and destruction through the application
	  - context. Optional unless concurrent session control is being used.
      -->
    <listener>
        <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
    </listener>


  	<!-- Serves static resource content from .jar files such as spring-faces.jar -->
    <servlet>
        <servlet-name>Resources Servlet</servlet-name>
        <servlet-class>org.springframework.js.resource.ResourceServlet</servlet-class>
    </servlet>

	<!-- Map all /resources requests to the Resource Servlet for handling -->
    <servlet-mapping>
        <servlet-name>Resources Servlet</servlet-name>
        <url-pattern>/resources/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/static/*</url-pattern>
    </servlet-mapping>


    <!--
	- Provides core MVC application controller. See contacts-servlet.xml.
    -->
    <servlet>
        <servlet-name>WMS</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <servlet-mapping>
        <servlet-name>WMS</servlet-name>
        <url-pattern>/wms</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>WMS</servlet-name>
        <url-pattern>/index.jsp</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>WMS</servlet-name>
        <url-pattern>/admin/*</url-pattern>
    </servlet-mapping>
    <session-config>
        <session-timeout>10</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>



</web-app>
